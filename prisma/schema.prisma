// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model RawMaterial {
  id        Int                @id @default(autoincrement())
  name      String             @unique
  prices    RawMaterialPrice[]
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model RawMaterialPrice {
  id         Int         @id @default(autoincrement())
  materialId Int
  material   RawMaterial @relation(fields: [materialId], references: [id], onDelete: Cascade)
  price      Int
  date       DateTime    @default(now())
  createdAt  DateTime    @default(now())
}

model Item {
  id               Int               @id @default(autoincrement())
  name             String            @unique
  description      String?
  quantity         Int               @default(1)
  isFinal          Boolean           @default(false)
  sellingPrice     Int?
  ingredients      ItemIngredient[]  @relation("CraftedItem")
  productionOrders ProductionOrder[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  @@map("items")
}

model ItemIngredient {
  id             Int      @id @default(autoincrement())
  itemId         Int
  ingredientId   Int
  ingredientType String
  quantity       Int
  item           Item     @relation("CraftedItem", fields: [itemId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())

  @@index([ingredientId, ingredientType])
  @@index([itemId])
  @@map("item_ingredients")
}

model ProductionOrder {
  id             Int      @id @default(autoincrement())
  itemId         Int
  quantity       Int
  totalCost      Int
  sellingPrice   Int
  expectedProfit Int
  date           DateTime @default(now())
  item           Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())

  @@map("production_orders")
}
